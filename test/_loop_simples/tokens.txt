Token(lexeme='fn', type=<TokenType.Function: 35>, line=0)
Token(lexeme='main', type=<TokenType.Main: 37>, line=0)
Token(lexeme='(', type=<TokenType.LBracket: 11>, line=0)
Token(lexeme=')', type=<TokenType.RBracket: 12>, line=0)
Token(lexeme='{', type=<TokenType.LBrace: 13>, line=0)
Token(lexeme='let', type=<TokenType.Let: 39>, line=1)
Token(lexeme='i', type=<TokenType.Id: 4>, line=1)
Token(lexeme=':', type=<TokenType.Colon: 17>, line=1)
Token(lexeme='int', type=<TokenType.Int: 5>, line=1)
Token(lexeme=';', type=<TokenType.PComma: 19>, line=1)
Token(lexeme='i', type=<TokenType.Id: 4>, line=2)
Token(lexeme='=', type=<TokenType.Attr: 20>, line=2)
Token(lexeme='0', type=<TokenType.IntConst: 8>, line=2)
Token(lexeme=';', type=<TokenType.PComma: 19>, line=2)
Token(lexeme='while', type=<TokenType.While: 34>, line=3)
Token(lexeme='i', type=<TokenType.Id: 4>, line=3)
Token(lexeme='<', type=<TokenType.LT: 28>, line=3)
Token(lexeme='10', type=<TokenType.IntConst: 8>, line=3)
Token(lexeme='{', type=<TokenType.LBrace: 13>, line=3)
Token(lexeme='println', type=<TokenType.Println: 38>, line=4)
Token(lexeme='(', type=<TokenType.LBracket: 11>, line=4)
Token(lexeme='"{}"', type=<TokenType.FormatString: 40>, line=4)
Token(lexeme=',', type=<TokenType.Comma: 18>, line=4)
Token(lexeme='i', type=<TokenType.Id: 4>, line=4)
Token(lexeme=')', type=<TokenType.RBracket: 12>, line=4)
Token(lexeme=';', type=<TokenType.PComma: 19>, line=4)
Token(lexeme='i', type=<TokenType.Id: 4>, line=5)
Token(lexeme='=', type=<TokenType.Attr: 20>, line=5)
Token(lexeme='i', type=<TokenType.Id: 4>, line=5)
Token(lexeme='+', type=<TokenType.Plus: 22>, line=5)
Token(lexeme='1', type=<TokenType.IntConst: 8>, line=5)
Token(lexeme=';', type=<TokenType.PComma: 19>, line=5)
Token(lexeme='}', type=<TokenType.RBrace: 14>, line=6)
Token(lexeme='}', type=<TokenType.RBrace: 14>, line=7)
